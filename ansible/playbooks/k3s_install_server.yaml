---
- name: Install the K3S server
  gather_facts: false
  hosts:
    - k8s_server
  vars:
    env: "staging"
    k3s_version: "v1.25.3+k3s1"
  tasks:
    - name: K3S uninstall script exists
      become: true
      ansible.builtin.stat:
        path: /usr/local/bin/k3s-uninstall.sh
      register: k3s_uninstall_script
    - name: Copy the K3S uninstall script
      become: true
      ansible.builtin.copy:
        src: ../templates/uninstall-server.sh.j2
        dest: /usr/local/bin/k3s-uninstall.sh
        mode: 0755
      when: not k3s_uninstall_script.stat.exists
    - name: Uninstall K3S control plane
      become: true
      ansible.builtin.shell: "k3s-uninstall.sh"
      when: k3s_uninstall_script.stat.exists
      tags:
        - skip_ansible_lint
    - name: Install K3S
      become: true
      ansible.builtin.shell: "curl -sfL https://get.k3s.io | INSTALL_K3S_CHANNEL='{{ k3s_version }}' INSTALL_K3S_EXEC='--disable traefik' sh -"
      tags:
        - skip_ansible_lint
    - name: Ensure K3S is running
      become: true
      ansible.builtin.service:
        name: k3s
        state: started
        enabled: true
    - name: Output K3S token
      become: true
      ansible.builtin.shell: "cat /var/lib/rancher/k3s/server/node-token"
      register: k3s_token
      tags:
        - skip_ansible_lint
    - name: Output K3S server IP
      become: true
      ansible.builtin.shell: "ip addr show eth0 | grep -Po 'inet \\K[\\d.]+'"
      register: k3s_server_ip
      tags:
        - skip_ansible_lint
    - name: Print K3S token
      ansible.builtin.debug:
        msg: "K3S token: {{ k3s_token.stdout }}"
      tags:
        - skip_ansible_lint
    - name: Print K3S server IP
      ansible.builtin.debug:
        msg: "K3S server IP: {{ k3s_server_ip.stdout }}"
      tags:
        - skip_ansible_lint
