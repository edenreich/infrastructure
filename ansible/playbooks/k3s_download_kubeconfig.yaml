---
- name: Downloads the kubeconfig from the K3S server
  gather_facts: true
  hosts:
    - k8s_server
  vars:
    env: "staging"
  tasks:
    - name: Download the kubeconfig to /tmp directory
      become: true
      ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /tmp/k3s.yaml
        flat: true
        mode: 0644
      register: kubeconfig
    - name: Kubeconfig content
      ansible.builtin.set_fact:
        kubeconfig_content: "{{ lookup('file', kubeconfig.dest) | from_yaml }}"
    - name: Set the variables based on the kubeconfig content
      ansible.builtin.set_fact:
        cluster: "{{ kubeconfig_content | json_query('clusters[0].cluster') }}"
        user: "{{ kubeconfig_content | json_query('users[0].user') }}"
        server_ip: "{{ ansible_default_ipv4.address }}"
    - name: Create user certificate files
      ansible.builtin.copy:
        content: "{{ item.value | b64decode }}"
        dest: "/tmp/{{ item.key }}"
        mode: 0644
      no_log: true
      delegate_to: localhost
      loop: "{{ user | dict2items }}"
    - name: Create cluster certificate file
      ansible.builtin.copy:
        content: "{{ cluster['certificate-authority-data'] | b64decode }}"
        dest: "/tmp/certificate-authority-data"
        mode: 0644
      delegate_to: localhost
    - name: Create a new context in current kubeconfig
      ansible.builtin.shell:
        cmd: |
          kubectl config set-credentials {{ env }} --client-certificate=/tmp/client-certificate-data --client-key=/tmp/client-key-data --embed-certs=true
          kubectl config set-cluster {{ env }} --server=https://{{ server_ip }}:6443 --certificate-authority=/tmp/certificate-authority-data --embed-certs=true
          kubectl config set-context {{ env }} --cluster={{ env }} --user={{ env }} --namespace=default
      delegate_to: localhost
      tags:
        - skip_ansible_lint
    - name: Delete the temporary files
      ansible.builtin.file:
        path: "/tmp/{{ item }}"
        state: absent
      delegate_to: localhost
      loop:
        - k3s.yaml
        - client-certificate-data
        - client-key-data
        - certificate-authority-data
