---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  name: accessapplications.crds.kubeflare.io
spec:
  group: crds.kubeflare.io
  names:
    kind: AccessApplication
    listKind: AccessApplicationList
    plural: accessapplications
    singular: accessapplication
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DNSRecord is the Schema for the accessapplication API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AccessApplicationSpec defines the desired state of AccessApplication
            properties:
              accessPolicies:
                items:
                  properties:
                    descision:
                      type: string
                    exclude:
                      items:
                        type: string
                      type: array
                    include:
                      items:
                        type: string
                      type: array
                    name:
                      type: string
                    precendence:
                      type: integer
                    require:
                      items:
                        type: string
                      type: array
                  required:
                  - descision
                  - include
                  - name
                  type: object
                type: array
              allowedIdPs:
                items:
                  type: string
                type: array
              autoRedirectToIndentiy:
                type: boolean
              corsHeaders:
                properties:
                  allowAllHeaders:
                    type: boolean
                  allowAllMethods:
                    type: boolean
                  allowAllOrigins:
                    type: boolean
                  allowCredentials:
                    type: boolean
                  allowedHeader:
                    items:
                      type: string
                    type: array
                  allowedMethods:
                    items:
                      type: string
                    type: array
                  allowedOrigins:
                    items:
                      type: string
                    type: array
                  maxAge:
                    type: integer
                required:
                - allowAllHeaders
                - allowAllMethods
                - allowAllOrigins
                - allowCredentials
                - allowedHeader
                - allowedMethods
                - allowedOrigins
                - maxAge
                type: object
              domain:
                type: string
              name:
                type: string
              sessionDuration:
                type: string
              zone:
                type: string
            required:
            - domain
            - name
            - zone
            type: object
          status:
            description: AccessApplicationStatus defines the observed state of AccessApplicationS
            properties:
              applicationID:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  name: apitokens.crds.kubeflare.io
spec:
  group: crds.kubeflare.io
  names:
    kind: APIToken
    listKind: APITokenList
    plural: apitokens
    singular: apitoken
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: APIToken is the Schema for the APITokens API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: APITokenSpec defines the desired state of APIToken
            properties:
              email:
                type: string
              name:
                type: string
              value:
                type: string
              valueFrom:
                properties:
                  secretKeyRef:
                    description: SecretKeySelector selects a key of a Secret.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                type: object
            required:
            - email
            - name
            type: object
          status:
            description: APITokenStatus defines the observed state of APIToken
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  name: dnsrecords.crds.kubeflare.io
spec:
  group: crds.kubeflare.io
  names:
    kind: DNSRecord
    listKind: DNSRecordList
    plural: dnsrecords
    singular: dnsrecord
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DNSRecord is the Schema for the dnsrecords API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DNSRecordSpec defines the desired state of DNSRecord
            properties:
              record:
                properties:
                  content:
                    type: string
                  name:
                    type: string
                  priority:
                    type: integer
                  proxied:
                    type: boolean
                  ttl:
                    type: integer
                  type:
                    type: string
                required:
                - content
                - name
                - type
                type: object
              records:
                items:
                  properties:
                    content:
                      type: string
                    name:
                      type: string
                    priority:
                      type: integer
                    proxied:
                      type: boolean
                    ttl:
                      type: integer
                    type:
                      type: string
                  required:
                  - content
                  - name
                  - type
                  type: object
                type: array
              zone:
                type: string
            required:
            - zone
            type: object
          status:
            description: DNSRecordStatus defines the observed state of DNSRecord
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  name: pagerules.crds.kubeflare.io
spec:
  group: crds.kubeflare.io
  names:
    kind: PageRule
    listKind: PageRuleList
    plural: pagerules
    singular: pagerule
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PageRule is the Schema for the pagerules API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PageRuleSpec defines the desired state of PageRule
            properties:
              pageRule:
                properties:
                  alwaysUseHttps:
                    type: object
                  autoMinify:
                    properties:
                      css:
                        type: boolean
                      html:
                        type: boolean
                      js:
                        type: boolean
                    required:
                    - css
                    - html
                    - js
                    type: object
                  enabled:
                    type: boolean
                  forwardingUrl:
                    properties:
                      redirectUrl:
                        type: string
                      statusCode:
                        type: integer
                    required:
                    - redirectUrl
                    - statusCode
                    type: object
                  hostHeaderOverride:
                    properties:
                      value:
                        type: string
                    required:
                    - value
                    type: object
                  priority:
                    type: integer
                  requestUrl:
                    type: string
                  resolveOverride:
                    properties:
                      value:
                        type: string
                    required:
                    - value
                    type: object
                required:
                - requestUrl
                type: object
              zone:
                type: string
            required:
            - zone
            type: object
          status:
            description: PageRuleStatus defines the observed state of PageRule We
              are storing the requested priority here because the priority is different
              on cloudflare side and hence we cannot depend on the one from its API
              to detect changes to the spec
            properties:
              id:
                type: string
              lastAppliedPriority:
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  name: webapplicationfirewallrules.crds.kubeflare.io
spec:
  group: crds.kubeflare.io
  names:
    kind: WebApplicationFirewallRule
    listKind: WebApplicationFirewallRuleList
    plural: webapplicationfirewallrules
    singular: webapplicationfirewallrule
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: WebApplicationFirewallRule is the Schema for the webapplicationfirewallrules
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WebApplicationFirewallRuleSpec defines the desired state
              of WebApplicationFirewallRule
            properties:
              rules:
                items:
                  properties:
                    id:
                      type: string
                    mode:
                      type: string
                    packageid:
                      type: string
                  required:
                  - id
                  - mode
                  type: object
                type: array
              zone:
                type: string
            required:
            - zone
            type: object
          status:
            description: WebApplicationFirewallRuleStatus defines the observed state
              of WebApplicationFirewallRule
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  name: workerroutes.crds.kubeflare.io
spec:
  group: crds.kubeflare.io
  names:
    kind: WorkerRoute
    listKind: WorkerRouteList
    plural: workerroutes
    singular: workerroute
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: WorkerRoute is the Schema for the workerroutes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkerRouteSpec defines the desired state of WorkerRoute
            properties:
              pattern:
                type: string
              script:
                type: string
              zone:
                type: string
            required:
            - pattern
            - zone
            type: object
          status:
            description: WorkerRouteStatus defines the observed state of WorkerRoute
            properties:
              id:
                type: string
              lastError:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  name: zones.crds.kubeflare.io
spec:
  group: crds.kubeflare.io
  names:
    kind: Zone
    listKind: ZoneList
    plural: zones
    singular: zone
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Zone is the Schema for the zones API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ZoneSpec defines the desired state of Zone
            properties:
              apiToken:
                type: string
              settings:
                properties:
                  0rtt:
                    type: boolean
                  advancedDDOS:
                    type: boolean
                  alwaysOnline:
                    type: boolean
                  alwaysUseHttps:
                    type: boolean
                  automaticHTTPSRewrites:
                    type: boolean
                  brotli:
                    type: boolean
                  browserCacheTTL:
                    type: integer
                  browserCheck:
                    type: boolean
                  cacheLevel:
                    type: string
                  challengeTTL:
                    type: integer
                  ciphers:
                    items:
                      type: string
                    type: array
                  developmentMode:
                    type: boolean
                  emailObfuscation:
                    type: boolean
                  hotlinkProtection:
                    type: boolean
                  http2:
                    type: boolean
                  http2Prioritization:
                    type: boolean
                  http3:
                    type: boolean
                  imageResizing:
                    type: boolean
                  ipGeolocation:
                    type: boolean
                  ipv6:
                    type: boolean
                  minTLSVersion:
                    type: string
                  minify:
                    properties:
                      css:
                        type: boolean
                      html:
                        type: boolean
                      js:
                        type: boolean
                    type: object
                  mirage:
                    type: boolean
                  mobileRedirect:
                    properties:
                      mobileSubdomain:
                        type: string
                      status:
                        type: boolean
                      stripURI:
                        type: boolean
                    required:
                    - status
                    type: object
                  opportunisticEncryption:
                    type: boolean
                  opportunisticOnion:
                    type: boolean
                  originErrorPagePassThru:
                    type: boolean
                  polish:
                    type: boolean
                  prefetchPreload:
                    type: boolean
                  privacyPass:
                    type: boolean
                  pseudoIPV4:
                    type: boolean
                  responseBuffering:
                    type: boolean
                  rocketLoader:
                    type: boolean
                  securityHeader:
                    properties:
                      enabled:
                        type: boolean
                      includeSubdomains:
                        type: boolean
                      maxAge:
                        type: integer
                      noSniff:
                        type: boolean
                    type: object
                  securityLevel:
                    type: string
                  serverSideExclude:
                    type: boolean
                  sortQueryStringForCache:
                    type: boolean
                  ssl:
                    type: boolean
                  tls13:
                    type: boolean
                  tlsClientAuth:
                    type: boolean
                  trueClientIPHeader:
                    type: boolean
                  waf:
                    type: boolean
                  webp:
                    type: boolean
                  websockets:
                    type: boolean
                type: object
            required:
            - apiToken
            type: object
          status:
            description: ZoneStatus defines the observed state of Zone
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
