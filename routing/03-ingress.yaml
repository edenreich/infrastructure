---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: travel-blog-production
  namespace: main
  labels:
    name: production
  annotations:
    nginx.ingress.kubernetes.io/from-to-www-redirect: 'true'
    nginx.ingress.kubernetes.io/use-proxy-protocol: 'true'
    nginx.ingress.kubernetes.io/use-forwarded-headers: 'true'
    nginx.ingress.kubernetes.io/enable-real-ip: 'true'
    external-dns.alpha.kubernetes.io/hostname: 'travel-blog.eden-reich.com'
    external-dns.alpha.kubernetes.io/target: '1.1.1.1'
    external-dns.alpha.kubernetes.io/cloudflare-proxied: 'true'
spec:
  ingressClassName: nginx
  rules:
    - host: travel-blog.eden-reich.com
      http:
        paths:
          - backend:
              service:
                name: production-cluster
                port:
                  number: 8080
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - travel-blog.eden-reich.com
      secretName: eden-reich.com-tls
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: staging
#   namespace: main
#   labels:
#     name: staging
#   annotations:
#     nginx.ingress.kubernetes.io/use-proxy-protocol: 'true'
#     nginx.ingress.kubernetes.io/use-forwarded-headers: 'true'
#     nginx.ingress.kubernetes.io/enable-real-ip: 'true'
#     external-dns.alpha.kubernetes.io/hostname: '*.eden-reich.com'
#     external-dns.alpha.kubernetes.io/target: '1.1.1.1'
#     external-dns.alpha.kubernetes.io/cloudflare-proxied: 'true'
# spec:
#   ingressClassName: nginx
#   rules:
#     - host: '*.eden-reich.com'
#       http:
#         paths:
#           - pathType: Prefix
#             path: '/'
#             backend:
#               service:
#                 name: staging-cluster
#                 port:
#                   number: 8080
#   tls:
#     - hosts:
#         - '*.eden-reich.com'
#       secretName: eden-reich.com-tls
